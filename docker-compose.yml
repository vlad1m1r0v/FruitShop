services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:7
    container_name: redis
    networks:
      - backend

  django:
    build:
      context: .
      dockerfile: deploy/django/Dockerfile
    container_name: django
    env_file: .env
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks:
      - backend

  nginx:
    image: nginx:1.27
    container_name: nginx
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on:
      - django
    networks:
      - backend

  beat:
    build:
      context: .
      dockerfile: deploy/celery/Dockerfile
    container_name: beat
    command: make beat
    env_file: .env
    depends_on:
      - django
      - redis
    networks:
      - backend

  worker_trade:
    build:
      context: .
      dockerfile: deploy/celery/Dockerfile
    container_name: worker_trade
    command: make worker_trade
    env_file: .env
    depends_on:
      - django
      - redis
    networks:
      - backend

  worker_warehouse:
    build:
      context: .
      dockerfile: deploy/celery/Dockerfile
    container_name: worker_warehouse
    command: make worker_warehouse
    env_file: .env
    depends_on:
      - django
      - redis
    networks:
      - backend

  worker_jokes:
    build:
      context: .
      dockerfile: deploy/celery/Dockerfile
    container_name: worker_jokes
    command: make worker_jokes
    env_file: .env
    depends_on:
      - django
      - redis
    networks:
      - backend

  worker_audit:
    build:
      context: .
      dockerfile: deploy/celery/Dockerfile
    container_name: worker_audit
    command: make worker_audit
    env_file: .env
    depends_on:
      - django
      - redis
    networks:
      - backend

  worker_balance:
    build:
      context: .
      dockerfile: deploy/celery/Dockerfile
    container_name: worker_balance
    command: make worker_balance
    env_file: .env
    depends_on:
      - django
      - redis
    networks:
      - backend

  worker_autoclean:
    build:
      context: .
      dockerfile: deploy/celery/Dockerfile
    container_name: worker_autoclean
    command: make worker_autoclean
    env_file: .env
    depends_on:
      - django
      - redis
    networks:
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  backend: